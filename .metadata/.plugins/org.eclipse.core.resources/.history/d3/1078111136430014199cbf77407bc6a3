import java.io.File;

import Algorithms.*;


public class Compute {

	public static Info info;
	
	private static class ThreadRead extends Thread {
		public FileManager reader;
		public File[] files;
		
		public ThreadRead(FileManager reader, String sourceDirectory){
			super();
			this.reader=reader;
			this.files=reader.listDirectories(sourceDirectory);
		}
		
		public synchronized void run() {
			while(true) {
				try {
					for (File file: files){
						System.out.println(file.getName());
						reader.parse(file, info);
						for(String key: info.getInfo().keySet()){
							System.out.println(info.getInfo().get(key));
						}
						wait();
					}
				} catch (InterruptedException e){};
			}
		}
		
		
	}

	
	private static class ThreadCompute extends Thread {
		public Density density;
		
		public ThreadCompute(Density density){
			super();
			this.density=density;
		}

		public synchronized void run() {
			while(true) {
				System.out.println("las conhitas");
				for(String key:info.getInfo().keySet()){
					DescriptiveStats stat = new DescriptiveStats(info.getInfo().get(key));
					System.out.println("leyendo");
					int mean = stat.getMean();
					density.densityX(info.getInfo().get(key),mean,info.getInfo().get(key).getLast());
					notify();	
				}
			}
		}
	}


	public static void main (String[] args){
		FileManager fm = new FileManager();
		String rootDirectory = "/Users/alvaro/Documents/TUGraz/Master Thesis/TrainingSet/";
		ThreadRead threadRead = new ThreadRead(fm, rootDirectory);
		ThreadCompute threadCompute = new ThreadCompute(new Density());
		threadRead.start();
		threadCompute.start();
	}





}
