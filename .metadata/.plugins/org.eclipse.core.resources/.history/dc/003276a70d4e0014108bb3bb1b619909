package Algorithms;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Deque;
import java.util.List;


// TODO: Auto-generated Javadoc
/**
 * The Class Hull.
 */
public class Hull implements Algorithm{

	/** The hulls. */
	public List<Integer> hulls;

	/**
	 * Instantiates a new hull.
	 */
	public Hull(){
		super();
		this.hulls=new ArrayList<Integer>();
	}


	/**
	 * Gets the hulls.
	 *
	 * @return the hulls
	 */
	public List<Integer> getHulls() {
		return hulls;
	}
	
	@Override
	public int getSize(){
		return hulls.size();
	}

	@Override
	public void deleteFirst(){
		hulls.remove(0);
	}

	@Override
	public double probOutlier() {
		
		
		return 0.0;
	}

	@Override
	public void calculate(Deque<Integer> data){
		if(hulls.isEmpty()){
			hulls = new ArrayList<Integer>(data);
		}
		else{
			hulls.add(data.getLast());
		}
		Collections.sort(hulls);
	}






}
